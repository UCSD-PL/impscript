
(*** ../tests/objects-0/numlist-00.1.is ***)

extern val _plus : (num, num) -> num;
type numlist = mu 'x. {hd: num, tl: ?('x)};
var foo; foo = function (xs: ?(ref numlist)) -> num {
  [xs = (?(ref numlist) => ref numlist)(xs);]
  [xs = unfold (numlist, xs);]
  _plus(1, xs.hd);
  _plus(2, xs.hd);
  [xs.tl = (?(ref numlist) => ref numlist)(xs.tl);]
  [xs.tl = unfold (numlist, xs.tl);]
  _plus(3, xs.tl.hd);
  _plus(4, xs.tl.hd);
  [xs.tl.tl = (?(ref numlist) => ref numlist)(xs.tl.tl);]
  [xs.tl.tl = unfold (numlist, xs.tl.tl);]
  _plus(5, xs.tl.tl.hd);
  _plus(6, xs.tl.tl.hd);
  return _plus(_plus(xs.hd, xs.tl.hd), xs.tl.tl.hd);
};
