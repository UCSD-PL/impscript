extern val _isNull : (any) -> (bool);
extern val _plus : (num, num) -> (num);

type numlist = mu 'x. {
  hd: num,
  tl: ?(ref('x)),
  sum: (all L0. ?(*L0) / *L0: 'x) -> (num / *L0: 'x)
};

var callSum; callSum = function (all L. xs:*L / *L: numlist)
                             -> (num / *L: numlist) {
  return xs.sum(xs);
};

var obj = {hd = 0, tl = null};
obj.sum = function (all L0. this:?(*L0) / *L0: numlist)
                -> (num / *L0: numlist) {
  if (_isNull(this.tl)) {
    return this.hd;
  } else {
    return _plus(this.hd, this.tl.sum(this.tl));
  }
};

callSum(obj);
obj.sum(obj);
